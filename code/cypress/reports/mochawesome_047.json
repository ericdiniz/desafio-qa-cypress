{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2025-03-18T14:19:56.421Z",
    "end": "2025-03-18T14:20:23.144Z",
    "duration": 26723,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "233fda5c-474b-4a9e-acc5-d7a4e1e92946",
      "title": "",
      "fullFile": "cypress/e2e/specs/movimentacoes.cy.js",
      "file": "cypress/e2e/specs/movimentacoes.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6355adaa-9c79-4d0f-9020-ddd35981d27e",
          "title": "Fluxo de Criar Movimentação",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve criar no mínimo 2 movimentações (Receita e Despesa)",
              "fullTitle": "Fluxo de Criar Movimentação Deve criar no mínimo 2 movimentações (Receita e Despesa)",
              "timedOut": null,
              "duration": 5854,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_ContasPage.default.visit();\n(0, _incrementarNomeDaConta.gerarNomeUnicoConta)(nomeBase).then(nomeConta => {\n  _ContasPage.default.adicionarConta(nomeConta);\n  _ContasPage.default.validarMensagemSucesso('Conta adicionada com sucesso!');\n});\n_MovimentacoesPage.default.visit();\n(0, _incrementarNomeDaConta.gerarNomeUnicoMovimentacao)(nomeBase).then(nomeMovimentacao => {\n  _MovimentacoesPage.default.criarMovimentacao('Receita', 'Salário', '1000', 'Conta Movimentações 701', 'Empresa XYZ', '12/03/2025', '12/03/2025', 'Pago');\n  _MovimentacoesPage.default.validarMensagemSucesso('Movimentação adicionada com sucesso!');\n  _MovimentacoesPage.default.criarMovimentacao('Despesa', 'Aluguel', '800', 'Conta Movimentações 701', 'Proprietário', '15/03/2025', '15/03/2025', 'Pendente');\n  _MovimentacoesPage.default.validarMensagemSucesso('Movimentação adicionada com sucesso!');\n});",
              "err": {},
              "uuid": "b658875f-1f66-4fab-9d24-e728c63e2497",
              "parentUUID": "6355adaa-9c79-4d0f-9020-ddd35981d27e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve criar no mínimo 2 movimentações para cada conta",
              "fullTitle": "Fluxo de Criar Movimentação Deve criar no mínimo 2 movimentações para cada conta",
              "timedOut": null,
              "duration": 6589,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_ContasPage.default.visit();\n(0, _incrementarNomeDaConta.gerarNomeUnicoConta)(nomeBase).then(nomeConta1 => {\n  (0, _incrementarNomeDaConta.gerarNomeUnicoConta)(nomeBase).then(nomeConta2 => {\n    _ContasPage.default.adicionarConta(nomeConta1);\n    _ContasPage.default.validarMensagemSucesso('Conta adicionada com sucesso!');\n    _ContasPage.default.adicionarConta(nomeConta2);\n    _ContasPage.default.validarMensagemSucesso('Conta adicionada com sucesso!');\n  });\n});\n_MovimentacoesPage.default.visit();\n(0, _incrementarNomeDaConta.gerarNomeUnicoMovimentacao)(nomeBase).then(nomeMovimentacao1 => {\n  (0, _incrementarNomeDaConta.gerarNomeUnicoMovimentacao)(nomeBase).then(nomeMovimentacao2 => {\n    _MovimentacoesPage.default.criarMovimentacao('Receita', 'Salário', '1000', 'Conta Movimentações 701', 'Empresa XYZ', '15/03/2025', '15/03/2025', 'Pago');\n    _MovimentacoesPage.default.validarMensagemSucesso('Movimentação adicionada com sucesso!');\n    _MovimentacoesPage.default.criarMovimentacao('Despesa', 'Aluguel', '800', 'Conta Movimentações 701', 'Proprietário', '10/03/2025', '10/03/2025', 'Pendente');\n    _MovimentacoesPage.default.validarMensagemSucesso('Movimentação adicionada com sucesso!');\n  });\n});",
              "err": {},
              "uuid": "e1d2c18d-919c-4b50-b36f-ccc8f1847239",
              "parentUUID": "6355adaa-9c79-4d0f-9020-ddd35981d27e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve criar no mínimo 2 movimentações para cada situação",
              "fullTitle": "Fluxo de Criar Movimentação Deve criar no mínimo 2 movimentações para cada situação",
              "timedOut": null,
              "duration": 4658,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_MovimentacoesPage.default.visit();\n(0, _incrementarNomeDaConta.gerarNomeUnicoMovimentacao)(nomeBase).then(nomeMovimentacao => {\n  _MovimentacoesPage.default.criarMovimentacao('Receita', 'Salário', '1000', 'Conta Movimentações 701', 'Empresa XYZ', '15/03/2025', '15/03/2025', 'Pago');\n  _MovimentacoesPage.default.validarMensagemSucesso('Movimentação adicionada com sucesso!');\n  _MovimentacoesPage.default.criarMovimentacao('Despesa', 'Aluguel', '800', 'Conta Movimentações 701', 'Proprietário', '10/03/2025', '10/03/2025', 'Pendente');\n  _MovimentacoesPage.default.validarMensagemSucesso('Movimentação adicionada com sucesso!');\n});",
              "err": {},
              "uuid": "1e2a3342-2eb0-45b0-9d2c-2426033cb6ca",
              "parentUUID": "6355adaa-9c79-4d0f-9020-ddd35981d27e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve criar no mínimo 2 movimentações para meses diferentes",
              "fullTitle": "Fluxo de Criar Movimentação Deve criar no mínimo 2 movimentações para meses diferentes",
              "timedOut": null,
              "duration": 4637,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_MovimentacoesPage.default.visit();\n(0, _incrementarNomeDaConta.gerarNomeUnicoMovimentacao)(nomeBase).then(nomeMovimentacao => {\n  _MovimentacoesPage.default.criarMovimentacao('Receita', 'Salário', '1000', 'Conta Movimentações 701', 'Empresa XYZ', '15/03/2025', '15/03/2025', 'Pago');\n  _MovimentacoesPage.default.validarMensagemSucesso('Movimentação adicionada com sucesso!');\n  _MovimentacoesPage.default.criarMovimentacao('Despesa', 'Aluguel', '800', 'Conta Movimentações 701', 'Proprietário', '15/02/2025', '15/02/2025', 'Pendente');\n  _MovimentacoesPage.default.validarMensagemSucesso('Movimentação adicionada com sucesso!');\n});",
              "err": {},
              "uuid": "72c0f5f4-50e7-4276-8729-d6597512dcc2",
              "parentUUID": "6355adaa-9c79-4d0f-9020-ddd35981d27e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve validar os campos de data",
              "fullTitle": "Fluxo de Criar Movimentação Deve validar os campos de data",
              "timedOut": null,
              "duration": 2192,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_MovimentacoesPage.default.visit();\ncy.get('#data_transacao').type('data inválida');\ncy.get('#data_pagamento').type('data inválida');\ncy.get('.btn').contains('Salvar').click();\ncy.contains('Data da Movimentação inválida (DD/MM/YYYY)').should('be.visible');\ncy.contains('Data da Movimentação deve ser menor ou igual à data atual').should('be.visible');\ncy.contains('Data do pagamento inválida (DD/MM/YYYY)').should('be.visible');",
              "err": {},
              "uuid": "1df13dc3-0ae2-4bca-931a-099f5164affe",
              "parentUUID": "6355adaa-9c79-4d0f-9020-ddd35981d27e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve validar o campo valor",
              "fullTitle": "Fluxo de Criar Movimentação Deve validar o campo valor",
              "timedOut": null,
              "duration": 1877,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_MovimentacoesPage.default.visit();\ncy.get('#valor').type('valor inválido');\ncy.get('.btn').contains('Salvar').click();\n_MovimentacoesPage.default.validarCampoValorInvalido();",
              "err": {},
              "uuid": "e2a804be-25bd-4b03-a7b6-cca557844cb9",
              "parentUUID": "6355adaa-9c79-4d0f-9020-ddd35981d27e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b658875f-1f66-4fab-9d24-e728c63e2497",
            "e1d2c18d-919c-4b50-b36f-ccc8f1847239",
            "1e2a3342-2eb0-45b0-9d2c-2426033cb6ca",
            "72c0f5f4-50e7-4276-8729-d6597512dcc2",
            "1df13dc3-0ae2-4bca-931a-099f5164affe",
            "e2a804be-25bd-4b03-a7b6-cca557844cb9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 25807,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true,
        "embeddedScreenshots": true,
        "inlineAssets": true
      },
      "version": "6.2.0"
    }
  }
}